set -g default-shell /usr/local/bin/bash

# Use C-a as a prefix
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

set-option -g mouse on

# Manage three columns on 15-inch laptop screen
bind-key a  resize-pane -x 86

# Use mnemonic keys for creating splits
unbind-key %
unbind-key '"'
bind \ split-window -h -c '#{pane_current_path}'  # Split panes horizontally
bind - split-window -v -c '#{pane_current_path}'  # Split panes vertically

# vi mode
set-window-option -g mode-keys vi

# Simple pane switching with prefix and no vim-tmux-navigator plugin
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-a h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-a j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-a k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-a l"  "select-pane -R"

unbind-key C-Up
unbind-key C-Down
unbind-key C-Left
unbind-key C-Right

unbind-key Up
unbind-key Down
unbind-key Left
unbind-key Right

# Use arrow keys to resize panes
bind-key -r Up resize-pane -U
bind-key -r Down resize-pane -D
bind-key -r Left resize-pane -L
bind-key -r Right resize-pane -R

# Copied from
# https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# Requires brew install reattach-to-user-namespace
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Don't link window sizes in grouped sessions (unless the same window is showing in each session)
setw -g aggressive-resize on

# When renaming a window, start with a blank field(instead of current window name)
# http://unix.stackexchange.com/questions/269537/
bind-key          , command-prompt "rename-window '%%'"

bind-key c command-prompt -p "window name:" "new-window; rename-window '%%'"
